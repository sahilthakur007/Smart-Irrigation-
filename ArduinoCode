#include <ESP8266WiFi.h>
#include <FirebaseArduino.h>
#include <NTPClient.h>
#include <WiFiUdp.h>
// Set these to run example.
#define FIREBASE_HOST "smart-irrigation-d65e8-default-rtdb.firebaseio.com"
#define FIREBASE_AUTH "mtsWVSA4UDe0ohv4lzwIkxPyYaIfTE3kWUmjuPgj"
#define WIFI_SSID "Infinix HOT 7"
#define WIFI_PASSWORD "sahil123"
int sensorpin=A0;
int sensorvalue=0;
int outputvalue=0;
const int trigPin = D1;  //D4
const int echoPin = D2;
double  duration;
double distance;
double waterLevel;
  double tankheight = 100; 

bool isoff = true ;
int speedLevel = 0;  
int takemoisture = 100000; 
String  dayWeek [] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "in.pool.ntp.org", 19800, 60000);
void setup() {
  Serial.begin(9600);

  // connect to wifi.
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
//  WiFi.begin(WIFI_SSID);
  Serial.print("connecting");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println();
  Serial.print("connected: ");
  Serial.println(WiFi.localIP());
  timeClient.begin();
  
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);



  pinMode (D4,OUTPUT);
  pinMode (A0,INPUT);
}

int n = 0;

void loop() {


   sensorvalue=analogRead(A0);
 outputvalue=100-map(sensorvalue,0,1023,1,100); 
 int waterLevel = calculateDistance() ; 
// Firebase.setInt("waterLevel", waterLevel);
 Firebase.setInt("waterLeval", waterLevel);

 timeClient.update();
  String day = dayWeek[timeClient.getDay()];
  String timev = timeClient.getFormattedTime(); 
  String date_time = timeClient.getFormattedDate(); 

  int index_date = date_time.indexOf("T"); 
  String dd = date_time.substring(8,index_date); 
  String mm = date_time.substring(5,index_date-3); 
  String yyyy = date_time.substring(0,index_date-6); 
  String date = (dd+" "+mm+" "+yyyy);
//  int waterLevel = calculateDistance(); ; 
  Serial.println(day);
  Serial.println(timev);
  Serial.println(date);
  if(!takemoisture)
  {  
    Firebase.pushString("Moisture_Table/Date",date );
    Firebase.pushString("Moisture_Table/Day",day );
    Firebase.pushString("Moisture_Table/Time",timev );
    Firebase.pushInt("Moisture_Table/Moisture",outputvalue );
    takemoisture = 10000; 
  }
 //---------------------------------------

 


 
  Firebase.setInt("Moisture", outputvalue);
  // handle error
  if (Firebase.failed()) {
      Serial.print("setting /Moiture failed:");
      Serial.println(Firebase.error());  
      return;
  }
//  delay(1000);
  //----
  isoff = Firebase.getBool("Pump Status");
  speedLevel = Firebase.getInt("Motar speed");
  Serial.print(speedLevel);
  if(!isoff)
{
     analogWrite(D4,255-speedLevel) ;
}
else{
       digitalWrite(D4,HIGH) ;

}
//---


if( outputvalue<20 and isoff and waterLevel>0)
  {
       Serial.println("watering plant");
       Firebase.setBool("isOnManually", false);
       
    
   Firebase.setBool("Pump Status", false);
  if (Firebase.failed()) {
      Serial.print("setting /message failed:");
      Serial.println(Firebase.error());  
      return;
  }

        
//       delay(1000); 
  }
  else if(outputvalue>60 and !isoff)
  {
       Serial.println("soil is wet enough to water");
              Firebase.setBool("isOffManually", false);


      
          Firebase.setBool("Pump Status", true);
  if (Firebase.failed()) {
      Serial.print("setting /message failed:");
      Serial.println(Firebase.error());  
      return;
  }
  }
   

  //-------------------------------------
 
   

//  delay(1000);
takemoisture = takemoisture-1 ; 
}
double  calculateDistance()
{
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);

// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);

// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);

// Calculating the distance
distance= duration*0.034/2;
return waterLevel = tankheight-distance;

}
